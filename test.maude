*** Assumptions:
*** 1. A link is one to one.
*** 2. Both ingress and egress of a link have the same cap.
*** 3. A reservation has only honest ASes on its path.

load parameters
load initial-state
---load path-table 

mod ANALYSIS is
  inc PARAMETERS + NAMES + PATH-GENERATOR .

  op initConfig : -> Config .
  eq initConfig = run(initState,LIMIT) .
  
  --- #sources, #intermediates, #destinations
  eq initState = init(3,5,1) .
  
  
  var C : Config .  var O : Address .
  var RS : Map{ReservationId,Snapshots} .  var SS : Snapshots .
  var RID : ReservationId .  vars T FL : Float .
    
	
  --- "local" analysis w/o SMC
  
  *** the last snapshot for each reservation
  op snapshots : Config -> Map{ReservationId,Snapshots} .
  op snapshots : Map{ReservationId,Snapshots} -> Map{ReservationId,Snapshots} .
  eq snapshots(< O : Monitor | snapshots: RS > C) = snapshots(RS) .
  eq snapshots((RID |-> (SS ;; < T FL >), RS)) = ((RID |-> < T FL >), snapshots(RS)) .
  eq snapshots(empty) = empty .
  	
	
	
	
	*** New Scenarios
    --- common parameters
    --- delta = 0.8
    --- capacity: A 100 B 200 C 125 D 150
	
	---(
    --- Scenario 1, Fig.2
    --- demands: 20, 80, 60
    --- allocated: 15, 60, 45
    ---
    eq initState = { 0.0 | nil } 
       < m : Monitor | snapshots: empty > [5.0, snapshot to m, 0]
	 
       < tb : Table | paths: ((n1 ; n4) ;; (n2 ; n4) ;; (n3 ; n4)),
	                  links: (< n1 n4 1 (100.0 * delta) > ;; < n2 n4 1 (200.0 * delta) > 
					          ;; < n3 n4 1 (125.0 * delta) >) >
							
       < n1 : Node | reservationMap: empty,
                     sqn: 0, sink: 0.0  > 
       < n2 : Node | reservationMap: empty,
                     sqn: 0, sink: 0.0 >
       < n3 : Node | reservationMap: empty,
                     sqn: 0, sink: 0.0 >
       < n4 : Node | reservationMap: empty,
                     sqn: 0, sink: (150.0 * delta) >

      [0.0, crtr((n1 ; n4),n4,minBW,20.0,maxT,n1), 0]
      [2.0, crtr((n2 ; n4),n4,minBW,80.0,maxT,n2), 0]
      [1.0, crtr((n3 ; n4),n4,minBW,60.0,maxT,n3), 0]
  				   .
  	)
	
  --- Scenario 2, Fig.3
  --- demands: 20, 400 (200 + 200), 60
  --- allocated: 10, 80, 30
  --- a1 and a2 are attackers, both requesting from the same ingress to egress
  ---(
  eq initState = { 0.0 | nil }
     < m : Monitor | snapshots: empty > [5.0, snapshot to m, 0]
     < tb : Table | paths: ((n1 ; n4) ;; (a1 ; n2 ; n4) ;; 
	                        (a2 ; n2 ; n4) ;; (n3 ; n4)),
					links: (< n1 n4 1 (100.0 * delta) > ;; < n2 n4 1 (200.0 * delta) > 
					          ;; < n3 n4 1 (125.0 * delta) > 
							  ;; < a1 n2 1 Infinity > ;; < a2 n2 1 Infinity >) > 
							
     < n1 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0  > 
     < n2 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0  >
     < n3 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0 >
     < n4 : Node | reservationMap: empty,
                   sqn: 0, sink: (150.0 * delta) >			   
     < a1 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0  > 
     < a2 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0  >

    [0.0, crtr((n1 ; n4),n4,minBW,20.0,maxT,n1), 0]
    [0.0, crtr((a1 ; n2 ; n4),(n2 ; n4),minBW,200.0,maxT,a1), 0]
	[0.0, crtr((a2 ; n2 ; n4),(n2 ; n4),minBW,200.0,maxT,a2), 0]
    [0.0, crtr((n3 ; n4),n4,minBW,60.0,maxT,n3), 0]
				   .
	)
	
    --- Scenario 3, Fig.4
    --- demands: 80 (a1), 120 (a1), 60
    --- allocated: 32, 48, 40
    ---(
    eq initState = { 0.0 | nil }
       < m : Monitor | snapshots: empty > [5.0, snapshot to m, 0]
       < tb : Table | paths: ((a1 ; n1 ; n4) ;; (a1 ; n4) ;; (n3 ; n4)),
	                  links: (< n1 n4 1 (100.0 * delta) > ;; < a1 n4 1 (200.0 * delta) > 
					          ;; < n3 n4 1 (125.0 * delta) > ;; < a1 n1 1 Infinity >) > 
							
       < a1 : Node | reservationMap: empty,
                     sqn: 0, sink: 0.0  > 
       < n1 : Node | reservationMap: empty,
                     sqn: 0, sink: 0.0 >
       < n3 : Node | reservationMap: empty,
                     sqn: 0, sink: 0.0 >
       < n4 : Node | reservationMap: empty,
                     sqn: 0, sink: (150.0 * delta) >	

      [2.0, crtr((a1 ; n1 ; n4),(n1 ; n4),minBW,80.0,maxT,a1), 0]
      [1.0, crtr((a1 ; n4),n4,minBW,120.0,maxT,a1), 0]
      [3.0, crtr((n3 ; n4),n4,minBW,60.0,maxT,n3), 0]
  				   .
  	)
	
  --- Scenario 4, Fig.5
  --- demands: 80 (a3), 160 (a1,a2), 60
  --- allocated: 32, 64, 24
  ---(
  eq initState = { 0.0 | nil }
     < m : Monitor | snapshots: empty > [sampleExp(1.0), snapshot to m, 0]
     < tb : Table | paths: ((a3 ; n4) ;; (a1 ; n2 ; n4) ;; (a2 ; n2 ; n4) ;; (n3 ; n4)),
	                links: (< a3 n4 1 (100.0 * delta) > ;; < n2 n4 1 (200.0 * delta) > 
					        ;; < a1 n2 1 Infinity > ;; < a2 n2 1 Infinity >
							;; < n3 n4 1 (125.0 * delta) >) > 
							
     < a3 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0  > 
				   
     < n2 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0  >
     < n3 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0 >
     < n4 : Node | reservationMap: empty,
                   sqn: 0, sink: (150.0 * delta) >
				   
     < a1 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0  > 
     < a2 : Node | reservationMap: empty,
                   sqn: 0, sink: 0.0  >

    [1.0, crtr((a3 ; n4),n4,minBW,80.0,maxT,a3), 0]
    [3.0, crtr((a1 ; n2 ; n4),(n2 ; n4),minBW,80.0,maxT,a1), 0]
	[2.0, crtr((a2 ; n2 ; n4),(n2 ; n4),minBW,80.0,maxT,a2), 0]
    [0.0, crtr((n3 ; n4),n4,minBW,60.0,maxT,n3), 0]
				   .  
  )
endm

set clear rules off .
rew initConfig .
rew snapshots(initConfig) .

---(
rew ideal(
< (md . 2) (md . 1) 1 5.0e+1 >,
< (md . 1) (dt . 2) 1 4.0e+1 >,
(< (sc . 1) (md . 1) 1 5.0e+1 > ;; < (sc . 1) (md . 2) 1
    5.0e+1 > ;; < (sc . 1) (md . 3) 1 4.0e+1 > ;; < (sc . 1) (dt . 1) 1 1.0e+1
    > ;; < (sc . 1) (dt . 2) 1 4.0e+1 > ;; < (sc . 1) (dt . 3) 1 5.0e+1 > ;; <
    (sc . 2) (md . 1) 1 3.0e+1 > ;; < (sc . 2) (md . 2) 1 4.0e+1 > ;; < (sc .
    2) (md . 3) 1 3.0e+1 > ;; < (sc . 2) (dt . 1) 1 4.0e+1 > ;; < (sc . 2) (dt
    . 2) 1 2.0e+1 > ;; < (sc . 2) (dt . 3) 1 2.0e+1 > ;; < (sc . 3) (md . 1) 1
    2.0e+1 > ;; < (sc . 3) (md . 2) 1 5.0e+1 > ;; < (sc . 3) (md . 3) 1 4.0e+1
    > ;; < (sc . 3) (dt . 1) 1 2.0e+1 > ;; < (sc . 3) (dt . 2) 1 2.0e+1 > ;; <
    (sc . 3) (dt . 3) 1 4.0e+1 > ;; < (md . 1) (dt . 1) 1 5.0e+1 > ;; < (md .
    1) (dt . 2) 1 4.0e+1 > ;; < (md . 1) (dt . 3) 1 2.0e+1 > ;; < (md . 2) (md
    . 1) 1 5.0e+1 > ;; < (md . 2) (dt . 1) 1 2.0e+1 > ;; < (md . 2) (dt . 2) 1
    5.0e+1 > ;; < (md . 2) (dt . 3) 1 5.0e+1 > ;; < (md . 3) (md . 1) 1 2.0e+1
    > ;; < (md . 3) (md . 2) 1 5.0e+1 > ;; < (md . 3) (dt . 1) 1 5.0e+1 > ;; <
    (md . 3) (dt . 2) 1 5.0e+1 > ;; < (md . 3) (dt . 3) 1 1.0e+1 >),
md . 1,
(r(sc . 1, 0) |-> [sc . 1 ; md . 1 ; dt . 3,
    1,1,2,9 |-> < 0.0,7.6455561141483486e+1,5.0e+1,3.0e+2,6.6666666666666661
    >], r(sc . 1, 2) |-> [sc . 1 ; md . 2 ; md . 1 ; dt . 2,2,1,3,3 |-> < 0.0,
    9.5615033595822752e+1,5.0e+1,3.0e+2,1.6e+1 >], r(sc . 2, 0) |-> [sc . 2 ;
    md . 1 ; dt . 2,1,1,2,6 |-> < 0.0,1.2742336865048856e+2,3.0e+1,3.0e+2,
    1.7142857142857142e+1 >], r(sc . 2, 2) |-> [sc . 2 ; md . 2 ; md . 1 ; dt .
    3,2,1,3,3 |-> < 0.0,7.1655035670846701e+1,2.2222222222222221e+1,3.0e+2,
    3.333333333333333 >], r(sc . 3, 0) |-> [sc . 3 ; md . 1 ; dt . 3,1,1,2,6
    |-> < 0.0,1.236918177921325e+2,2.0e+1,3.0e+2,6.6666666666666661 >], r(sc .
    3, 2) |-> [sc . 3 ; md . 2 ; md . 1 ; dt . 3,2,1,3,3 |-> < 0.0,
    1.0684339483268559e+2,1.7857142857142858e+1,3.0e+2,1.8248175182481752 >]),
6.0,
reserve(r(sc . 1, 2), 7, 2, 1, 3, sc . 1 ; md . 2 ; md . 1 ; dt . 2, 0.0, 9.5615033595822752e+1, 3.0e+2, 4.0399999999999999e+1 ;
    1.7857142857142858e+1),
0.0) .
)